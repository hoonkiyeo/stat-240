x_1
denmark = read_csv("danish-children.csv")
n_1 <- denmark %>%
filter(order == 3 & previous == "FF") %>%
summarise(n_1 = sum(n))
x_1 <- denmark %>%
filter(order == 3 & previous == "FF") %>%
summarise(x_1 = sum((str_count(sex,"F")*n)))
n_2 <- denmark %>%
filter(order == 3 & previous == "MM") %>%
summarise(n_2 = sum(n))
x_2 <- denmark %>%
filter(order == 3 & previous == "MM") %>%
summarise(x_2 = sum((str_count(sex,"F")*n)))
p_1 = x_1/n_1
p_2 = x_2/n_2
final <- bind_cols(n_1, n_2, x_1, x_2, p_1, p_2) %>%
rename(x_1 = "x_1...3",
x_2 = "x_2...4",
p_1 = "x_1...5",
p_2 = "x_2...6")
final
n_1
p_1
p_2
x_1+x_2
n_1+n_2
p_pool = (x_1+x_2)/(n_1+n_2)
p_pool = (x_1+x_2)/(n_1+n_2)
se <- sqrt((p_pool*(1-p_pool)*(1/n_1+1/n_2)))
p_value = 2*pnorm(-2.133504)
p_value
se
se
p_pool
z <- (p_1-p_2)/se
z
se
z <- (p_1-p_2)/se
z
p_value = 2*pnorm(-2.133509)
p_value
p_pool
se <- sqrt((p_pool*(1-p_pool)*(1/n_1+1/n_2)))
se
p_1-p_2
0.4915671 -0.4841488
p_1-p_2
p_pool = (x_1+x_2)/(n_1+n_2)
se <- sqrt((p_pool*(1-p_pool)*(1/n_1+1/n_2)))
z <- (0.4915671 -0.4841488)/se
p_value = 2*pnorm(-2.133509)
p_value
z
p_pool = (x_1+x_2)/(n_1+n_2)
se <- sqrt((p_pool*(1-p_pool)*(1/n_1+1/n_2)))
z <- (0.4915671 -0.4841488)/se
p_value = 2*pnorm(-2.133504)
p_value
p_pool = (x_1+x_2)/(n_1+n_2)
se <- sqrt((p_pool*(1-p_pool)*(1/n_1+1/n_2)))
z <- (0.4915671 -0.4841488)/se
p_value = 2*pnorm(-2.133504)
p_value
knitr::opts_chunk$set(echo = TRUE,
message=FALSE,
warning=FALSE,
cache = FALSE)
library(tidyverse)
library(lubridate)
library(stringr)
source("C:/stat_240/scripts/viridis.R")
x_distribution <- tibble(x_i = c(-2, -1, 0, 1),
`P(X_i=x_i)` = c(.5, .2, .1, .2))
x_distribution
x_distribution %>%
summarize(mean = sum(x_i*`P(X_i=x_i)`),
var = sum((x_i-mean)^2*`P(X_i=x_i)`))
p <- pnorm(4, 3, 2, lower.tail = TRUE)
n = choose(8,5)
ans <- n*p^5*(1-p)^3
ans
x_bar = 16
sd =2
n=400
z =1.34
#x_bar +- z*sd/sqrt(n)
#z*sd/sqrt(n) = 0.134
#z =1.34
1 - 2*pnorm(-z)
denmark = read_csv("danish-children.csv")
n_1 <- denmark %>%
filter(order == 3 & previous == "FF") %>%
summarise(n_1 = sum(n))
x_1 <- denmark %>%
filter(order == 3 & previous == "FF") %>%
summarise(x_1 = sum((str_count(sex,"F")*n)))
n_2 <- denmark %>%
filter(order == 3 & previous == "MM") %>%
summarise(n_2 = sum(n))
x_2 <- denmark %>%
filter(order == 3 & previous == "MM") %>%
summarise(x_2 = sum((str_count(sex,"F")*n)))
p_1 = x_1/n_1
p_2 = x_2/n_2
final <- bind_cols(n_1, n_2, x_1, x_2, p_1, p_2) %>%
rename(x_1 = "x_1...3",
x_2 = "x_2...4",
p_1 = "x_1...5",
p_2 = "x_2...6")
final
p_hat = p_1 - p_2
ci_left = p_hat - 1.96*sqrt(p_1*(1- p_1)/n_1 + p_2*(1-p_2)/n_2)
ci_right = p_hat + 1.96*sqrt(p_1*(1- p_1)/n_1 + p_2*(1-p_2)/n_2)
bind_cols(ci_left, ci_right) %>%
rename(ci_left = "x_1...1",
ci_right = "x_1...2")
p_pool = (x_1+x_2)/(n_1+n_2)
se <- sqrt((p_pool*(1-p_pool)*(1/n_1+1/n_2)))
z <- (0.4915671 -0.4841488)/se
p_value = 2*pnorm(-2.133504)
p_value
general <- read_csv("dollar_general_counts.csv") %>%
mutate(County = ifelse(County == "Dekalb", "DeKalb", County)) %>%
mutate(County = ifelse(County == "Mcduffie", "McDuffie", County)) %>%
mutate(County = ifelse(County == "Mcintosh", "McIntosh", County))
population <- read_csv("georgia_population_by_county.csv")
fei <- read_csv("georgia_fei_2020_actual.csv")
gp <- right_join(general, population)
dg <- left_join(gp, fei) %>%
rename(county = County,
fei = "Food Environment Index",
population = population,
stores = "Dollar General") %>%
mutate(dg_per = stores/population*100000) %>%
select(county, fei, population, stores, dg_per)
dg
#Summary of the median values for each of the four quantitative variables
dg %>%
summarise(m_fei = median(dg$fei, na.rm=TRUE),
m_population = median(dg$population, na.rm=TRUE),
m_stores = median(dg$stores, na.rm =TRUE),
m_dg_per = median(dg$dg_per, na.rm = TRUE))
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(aes(size = population)alpha = 0.5) +
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(aes(size = population)alpha = 0.5) +
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(aes(size = population)alpha = 0.5) +
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se=FALSE)
#(b)
get_slope <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[2])
}
get_intercept <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[1])
}
slope1 <- get_slope(dg$dg_per, dg$fei, dg)
slope1
ggplot(dg, aes(x = dg_per, y=fei,size = population)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se=FALSE)
#(b)
get_slope <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[2])
}
get_intercept <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[1])
}
slope1 <- get_slope(dg$dg_per, dg$fei, dg)
slope1
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(size = population, alpha = 0.5) +
geom_smooth(method = "lm", se=FALSE)
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(aes(size = population), alpha = 0.5) +
geom_smooth(method = "lm", se=FALSE)
#(b)
get_slope <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[2])
}
get_intercept <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[1])
}
slope1 <- get_slope(dg$dg_per, dg$fei, dg)
slope1
#(a)
dg2 <- dg %>%
filter(fei > 3 | is.na(fei))
ggplot(dg2, aes(x = dg_per, y = fei)) +
geom_point(aes(size = population),alpha =0.5)+
geom_smooth(method = "lm", se=FALSE)
#(b)
slope2 <- get_slope(dg2$dg_per, dg2$fei, dg2)
#(a)
dg2 <- dg %>%
filter(fei > 3 | is.na(fei))
ggplot(dg2, aes(x = dg_per, y = fei)) +
geom_point(aes(size = population),alpha =0.5)+
geom_smooth(method = "lm", se=FALSE)
#(b)
slope2 <- get_slope(dg2$dg_per, dg2$fei, dg2)
slope2
dg2 <- dg %>%
filter(fei > 3 | is.na(fei))
dg2
dg
general
population
fei
gp
dg
general <- read_csv("dollar_general_counts.csv") %>%
mutate(County = ifelse(County == "Dekalb", "DeKalb", County)) %>%
mutate(County = ifelse(County == "Mcduffie", "McDuffie", County)) %>%
mutate(County = ifelse(County == "Mcintosh", "McIntosh", County))
population <- read_csv("georgia_population_by_county.csv")
fei <- read_csv("georgia_fei_2020_actual.csv")
gp <- right_join(general, population)
dg <- left_join(gp, fei) %>%
rename(county = County,
fei = "Food Environment Index",
population = population,
stores = "Dollar General") %>%
mutate(dg_per = stores/population*100000) %>%
select(county, fei, population, stores, dg_per)
dg
#Summary of the median values for each of the four quantitative variables
dg %>%
summarise(m_fei = median(dg$fei, na.rm=TRUE),
m_population = median(dg$population, na.rm=TRUE),
m_stores = median(dg$stores, na.rm =TRUE),
m_dg_per = median(dg$dg_per, na.rm = TRUE))
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(aes(size = population), alpha = 0.5) +
geom_smooth(method = "lm", se=FALSE)
#(a)
dg2 <- dg %>%
filter(fei > 3 | is.na(fei))
ggplot(dg2, aes(x = dg_per, y = fei)) +
geom_point(aes(size = population),alpha =0.5)+
geom_smooth(method = "lm", se=FALSE)
#(b)
slope2 <- get_slope(dg2$dg_per, dg2$fei, dg2)
slope2
dg3
#(a)
dg3 <- dg %>%
filter(is.na(fei))
dg3
#(b)
intercept_1 <- get_intercept(dg$dg_per, dg$fei, dg)
intercept_2 <- get_intercept(dg2$dg_per, dg2$fei, dg2)
#The regression model using all data
predict_y1 <- function(x){
slope <- slope1
intercept <- intercept_1
y <- intercept + slope*x
names(y) <- "predicted missing FEI"
return(y)
}
predict_y1(dg3$dg_per)
#The regression model using the two low FEI values removed data
predict_y2 <- function(x){
slope <- slope2
intercept <- intercept_2
y <- intercept + slope*x
names(y) <- "predicted missing FEI"
return(y)
}
predict_y2(dg3$dg_per)
#(a)
dg3 <- dg %>%
filter(is.na(fei))
dg3
#(b)
intercept_1 <- get_intercept(dg$dg_per, dg$fei, dg)
intercept_2 <- get_intercept(dg2$dg_per, dg2$fei, dg2)
#The regression model using all data
predict_y1 <- function(x){
slope <- slope1
intercept <- intercept_1
y <- intercept + slope*x
names(y) <- "predicted missing FEI"
return(y)
}
predict_y1(dg3$dg_per)
#The regression model using the two low FEI values removed data
predict_y2 <- function(x){
slope <- slope2
intercept <- intercept_2
y <- intercept + slope*x
names(y) <- "predicted missing FEI"
return(y)
}
predict_y2(dg3$dg_per)
#(a)
dg3 <- dg %>%
filter(is.na(fei))
dg3
#(b)
intercept_1 <- get_intercept(dg$dg_per, dg$fei, dg)
intercept_2 <- get_intercept(dg2$dg_per, dg2$fei, dg2)
#The regression model using all data
predict_y1 <- function(x){
slope <- slope1
intercept <- intercept_1
y <- intercept + slope*x
names(y) <- "predicted missing FEI by using all data"
return(y)
}
predict_y1(dg3$dg_per)
#The regression model using the two low FEI values removed data
predict_y2 <- function(x){
slope <- slope2
intercept <- intercept_2
y <- intercept + slope*x
names(y) <- "predicted missing FEI by using the two low FEI values"
return(y)
}
predict_y2(dg3$dg_per)
trip <- read_csv("trip.csv") %>%
rename(id = "Trip ID",
duration = Duration,
start_date = "Start Date",
start_station = "Start Station",
end_station = "End Station",
start_terminal = "Start Terminal",
end_terminal = "End Terminal",
bike = "Bike #",
subscriber = "Subscriber Type",
zip = "Zip Code") %>%
mutate(year = year(as.Date(start_date, "%m/%d/%Y")),
month = month(as.Date(start_date, "%m/%d/%Y")))
trip
#(a)
print.data.frame(head(trip,6))
#(b)
trip %>%
group_by(month) %>%
summarise(max_duration = max(duration),
min_duration = min(duration))
trip3 <- trip %>%
mutate(season = case_when(month == 3 ~ "Spring",
month == 4 ~ "Spring",
month == 5 ~ "Spring",
month == 6 ~ "Summer",
month == 7 ~ "Summer",
month == 8 ~ "Summer",
month == 9 ~ "Fall",
month == 10 ~ "Fall",
month == 11 ~ "Fall",
month == 12 ~ "Winter",
month == 1 ~ "Winter",
month == 2 ~ "Winter")) %>%
group_by(season) %>%
summarise(avg_duration = mean(duration),
n = sum(str_count(season, "Summer"),
str_count(season, "Fall"),
str_count(season, "Spring"),
str_count(season, "Winter")),
sd = sd(duration),
se = sd/sqrt(n))
trip3
ggplot(trip3, aes(x=season, y=avg_duration)) +
geom_point(size = 2, color = "red") +
geom_segment(data = trip3, mapping = aes(x=season, xend = season, y = avg_duration-1.96*se, yend= avg_duration+1.96*se), color = "blue", size = 1) +
geom_segment(data = trip3, mapping = aes(x= season, xend = season, y = avg_duration-se, yend = avg_duration+se), color = "black", size= 1.5) +
xlab("Seasons") +
ylab("Average Duration") +
ggtitle("The average duration for bike trips in each of the four seasons")
knitr::opts_chunk$set(echo = TRUE,
message=FALSE,
warning=FALSE,
cache = FALSE)
library(tidyverse)
library(lubridate)
library(stringr)
source("C:/stat_240/scripts/viridis.R")
x_distribution <- tibble(x_i = c(-2, -1, 0, 1),
`P(X_i=x_i)` = c(.5, .2, .1, .2))
x_distribution
x_distribution %>%
summarize(mean = sum(x_i*`P(X_i=x_i)`),
var = sum((x_i-mean)^2*`P(X_i=x_i)`))
p <- pnorm(4, 3, 2, lower.tail = TRUE)
n = choose(8,5)
ans <- n*p^5*(1-p)^3
ans
x_bar = 16
sd =2
n=400
z =1.34
#x_bar +- z*sd/sqrt(n)
#z*sd/sqrt(n) = 0.134
#z =1.34
1 - 2*pnorm(-z)
denmark = read_csv("danish-children.csv")
n_1 <- denmark %>%
filter(order == 3 & previous == "FF") %>%
summarise(n_1 = sum(n))
x_1 <- denmark %>%
filter(order == 3 & previous == "FF") %>%
summarise(x_1 = sum((str_count(sex,"F")*n)))
n_2 <- denmark %>%
filter(order == 3 & previous == "MM") %>%
summarise(n_2 = sum(n))
x_2 <- denmark %>%
filter(order == 3 & previous == "MM") %>%
summarise(x_2 = sum((str_count(sex,"F")*n)))
p_1 = x_1/n_1
p_2 = x_2/n_2
final <- bind_cols(n_1, n_2, x_1, x_2, p_1, p_2) %>%
rename(x_1 = "x_1...3",
x_2 = "x_2...4",
p_1 = "x_1...5",
p_2 = "x_2...6")
final
p_hat = p_1 - p_2
ci_left = p_hat - 1.96*sqrt(p_1*(1- p_1)/n_1 + p_2*(1-p_2)/n_2)
ci_right = p_hat + 1.96*sqrt(p_1*(1- p_1)/n_1 + p_2*(1-p_2)/n_2)
bind_cols(ci_left, ci_right) %>%
rename(ci_left = "x_1...1",
ci_right = "x_1...2")
p_pool = (x_1+x_2)/(n_1+n_2)
se <- sqrt((p_pool*(1-p_pool)*(1/n_1+1/n_2)))
z <- (0.4915671 -0.4841488)/se
p_value = 2*pnorm(-2.133504)
p_value
general <- read_csv("dollar_general_counts.csv") %>%
mutate(County = ifelse(County == "Dekalb", "DeKalb", County)) %>%
mutate(County = ifelse(County == "Mcduffie", "McDuffie", County)) %>%
mutate(County = ifelse(County == "Mcintosh", "McIntosh", County))
population <- read_csv("georgia_population_by_county.csv")
fei <- read_csv("georgia_fei_2020_actual.csv")
gp <- right_join(general, population)
dg <- left_join(gp, fei) %>%
rename(county = County,
fei = "Food Environment Index",
population = population,
stores = "Dollar General") %>%
mutate(dg_per = stores/population*100000) %>%
select(county, fei, population, stores, dg_per)
dg
#Summary of the median values for each of the four quantitative variables
dg %>%
summarise(m_fei = median(dg$fei, na.rm=TRUE),
m_population = median(dg$population, na.rm=TRUE),
m_stores = median(dg$stores, na.rm =TRUE),
m_dg_per = median(dg$dg_per, na.rm = TRUE))
ggplot(dg, aes(x = dg_per, y=fei)) +
geom_point(aes(size = population), alpha = 0.5) +
geom_smooth(method = "lm", se=FALSE)
#(b)
get_slope <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[2])
}
get_intercept <- function(x,y, data)
{
fit <- lm(y ~ x, data=data)
return (coef(fit)[1])
}
slope1 <- get_slope(dg$dg_per, dg$fei, dg)
slope1
#(a)
dg2 <- dg %>%
filter(fei > 3 | is.na(fei))
ggplot(dg2, aes(x = dg_per, y = fei)) +
geom_point(aes(size = population),alpha =0.5)+
geom_smooth(method = "lm", se=FALSE)
#(b)
slope2 <- get_slope(dg2$dg_per, dg2$fei, dg2)
slope2
#(a)
dg3 <- dg %>%
filter(is.na(fei))
dg3
#(b)
intercept_1 <- get_intercept(dg$dg_per, dg$fei, dg)
intercept_2 <- get_intercept(dg2$dg_per, dg2$fei, dg2)
#The regression model using all data
predict_y1 <- function(x){
slope <- slope1
intercept <- intercept_1
y <- intercept + slope*x
return(y)
}
predict_y1(dg3$dg_per)
#The regression model using the two low FEI values removed data
predict_y2 <- function(x){
slope <- slope2
intercept <- intercept_2
y <- intercept + slope*x
return(y)
}
predict_y2(dg3$dg_per)
