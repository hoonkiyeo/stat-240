salaries
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0)
salaries_1
players_1
salaries_1
players_1
df_1 <- left_join(players_1, salaries_1, by = playerID)
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
salaries_1
salaries_1 <- salaries
salaries_1
View(salaries_1)
salaries_1 <- salaries
salaries_1
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
salaries_1
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
allstar <- read_csv("C:/stat_240/data/allstar.csv")
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
allstar
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
allstar
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
allstar
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
allstar_1
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- left_join(allstar_1, df_1, by = "playerID")
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- left_join(allstar_1, df_1, by = "playerID")
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- left_join(df_1, allstar_1, by = "playerID")
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- left_join(df_1, allstar_1, by = "playerID")
head(df_1)
allstar_1
df_1
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
df_1 <- left_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- full_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- right_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- left_join(allstar_1, df_1, by = "playerID")
df_1
df_1 <- left_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- anti_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- anti_join(df_1, allstar_1, by = "playerID")
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- anti_join(df_1, allstar_1, by = "playerID")
head(df_1)
df_1
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
df_1 <- anti_join(df_1, allstar_1, by = "playerID")
df_1 <- anti_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- anti_join(df_1, allstar_1, by = "playerID")
df_1
head(df_1)
df_1 <- anti_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- left_join(players_1, salaries_1, by = "playerID")
df_1
df_1 <- anti_join(df_1, allstar_1, by = "playerID") %>%
distinct(playerID)
df_1
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
allstar_1
df_1 <- full_join(df_1, allstar_1, by = "n")
df_1 <- full_join(df_1, allstar_1, by = "n")
df_1 <- left_join(df_1, allstar_1, by = "n")
df_1 <- right_join(df_1, allstar_1, by = "n")
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
df_1 <- right_join(df_1, allstar_1, by = "n")
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- right_join(df_1, allstar_1, by = "n")
df_1 <- right_join(df_1, allstar_1, by = "playerID")
df_1
df_1 <- df_1
df_1
df_1 <- left_join(players_1, salaries_1, by = "playerID")
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
df_1 <- df_1
df_1
df_1 <- df_1 %>%
filter((playerID) %in% allstar_1$playerID)
df_1
df_1 <- df_1 %>%
filter((playerID) %in% allstar_1$playerID) %>%
distinct(playerID)
df_1
df_1 <- df_1 %>%
filter((playerID) %in% allstar_1$playerID) %>%
distinct()
df_1
players <- read_csv("C:/stat_240/data/baseball_players.csv")
players
players <- read_csv("C:/stat_240/data/baseball_players.csv") %>%
distinct(playerID)
players
players <- read_csv("C:/stat_240/data/baseball_players.csv")
df_1 <- players %>%
filter((playerID) %in% allstar_1$playerID) %>%
distinct()
df_1
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
df_1
df_1 <- df_1 %>%
mutate(if_else(playerID %in% allstar_1$playerID, TRUE, FALSE))
df_1
df_1 <- df_1 %>%
mutate(allstar_status = if_else(playerID %in% allstar_1$playerID, allstar))
df_1 <- df_1 %>%
mutate(allstar_status = case_when(playerID %in% allstar_1 ~ "allstar",
playerID %!in% allstar_1 ~ "not_allstar"))
df_1 <- df_1 %>%
mutate(allstar_status = case_when(playerID %in% allstar_1 ~ "allstar"))
df_1
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- df_1 %>%
mutate(allstar_status = case_when(playerID %in% allstar_1 ~ "allstar"))
head(df_1)
df_1
df_1 <- df_1 %>%
mutate(allstar_status = case_when(playerID %in% allstar_1 ~ "allstar")) %>%
mutate(allstar_status = case_when!(playerID %in% allstar_1 ~ "not_allstar"))
df_1 <- df_1 %>%
mutate(allstar_status = case_when(playerID %in% allstar_1 ~ "allstar")) %>%
mutate!(allstar_status = case_when(playerID %in% allstar_1 ~ "not_allstar"))
df_1 <- df_1 %>%
mutate(allstar_status = ifelse(playerID %in% allstar_1$playerID, "allstar", "not_allstar"))
df_1
head(df_1
head(df_1)
df_1 <- df_1 %>%
mutate(allstar_status = ifelse(playerID %in% allstar_1$playerID, "allstar", "not_allstar"))
head(df_1)
df_1 <- df_1 %>%
mutate(allstar_status = ifelse(playerID %in% allstar_1$playerID, "allstar", "not_allstar"))
df_1
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- df_1 %>%
mutate(allstar_status = ifelse(playerID %in% allstar_1$playerID, "allstar", "not_allstar"))
head(df_1)
knitr::opts_chunk$set(echo = TRUE,
message=FALSE,
warning=FALSE,
cache = FALSE)
library(tidyverse)
library(lubridate)
library(stringr)
source("C:/stat_240/scripts/viridis.R")
dmy("03-Mar-2020")
knitr::include_graphics("C:/stat_240/data/census-regions.png")
states <- read_csv("C:/stat_240/data/states.csv")
states = states %>%
mutate(pct_dem = 100 * poll_2020_D / (poll_2020_D + poll_2020_R))
ggplot(states, aes(x=urban_index,y=pct_dem)) +
geom_point() +
geom_smooth(method = "lm", se=FALSE) +
xlab("Urban Index") +
ylab("Relative % Democratic") +
ggtitle("Democratic Support versus Urbanity",
subtitle = "2020 US Presidential Election State Polls")
states <- read_csv("C:/stat_240/data/states.csv")
states_4 <- states %>%
mutate(pct_dem = 100 * poll_2020_D / (poll_2020_D + poll_2020_R)) %>%
group_by(region) %>%
summarise(mean_pct = mean(pct_dem), mean_ur = mean(urban_index)) %>%
arrange(mean_ur)
states_4
states_5 <- states %>%
mutate(lean_d = case_when(str_detect(lean, "^R") ~ str_c("-", str_sub(lean, 3,5)),
str_detect(lean, "^D") ~ str_sub(lean, 3,5),
str_detect(lean, "^E") ~ "0")) %>%
mutate(lean_d = as.numeric(lean_d))
states_5
ggplot(states_5, mapping = aes(x = pct_bach, lean_d)) +
geom_point(aes(color = region)) +
geom_smooth(aes(group = 1), method = "lm", se = FALSE) +
xlab("% Adults 25+ with at least Bachelor's") +
ylab("Lean Democratic Party") +
ggtitle("US State Political Lean by Education")
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- df_1 %>%
mutate(allstar_status = ifelse(playerID %in% allstar_1$playerID, "allstar", "not_allstar"))
head(df_1)
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID") %>%
drop_na()
head(df_1)
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID")
head(df_1)
## Read in the appropriate data files
players <- read_csv("C:/stat_240/data/baseball_players.csv")
salaries <- read_csv("C:/stat_240/data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > ymd("1985-01-01") & finalGame < ymd("2015-01-01"))
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(salary > 0 & yearID < 2015)
## Build requested data frame
df_1 <- left_join(players_1, salaries_1, by = "playerID") %>%
drop_na()
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("C:/stat_240/data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
df_1 <- df_1 %>%
mutate(allstar_status = ifelse(playerID %in% allstar_1$playerID, "allstar", "not_allstar")) %>%
drop_na()
head(df_1)
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
breaks
labels
labels[1]
labels[3]
labels
df_1 <- df_1 %>%
mutate(period = case_when(yearID >= 1985 & yearID <= 1989 ~ labels[1],
yearID >= 1990 & yearID <= 1994 ~ labels[2],
yearID >= 1995 & yearID <= 1999 ~ labels[3],
yearID >= 2000 & yearID <= 2004 ~ labels[4],
yearID >= 2005 & yearID <= 2009 ~ labels[5],
yearID >= 2010 & yearID <= 2014 ~ labels[6]))
df_1
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
labels
## Build requested data frame
df_1 <- df_1 %>%
mutate(period = case_when(yearID >= 1985 & yearID <= 1989 ~ labels[1],
yearID >= 1990 & yearID <= 1994 ~ labels[2],
yearID >= 1995 & yearID <= 1999 ~ labels[3],
yearID >= 2000 & yearID <= 2004 ~ labels[4],
yearID >= 2005 & yearID <= 2009 ~ labels[5],
yearID >= 2010 & yearID <= 2014 ~ labels[6]))
head(df_1)
df_1
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
labels
## Build requested data frame
df_1 <- df_1 %>%
mutate(period = case_when(yearID >= 1985 & yearID <= 1989 ~ labels[1],
yearID >= 1990 & yearID <= 1994 ~ labels[2],
yearID >= 1995 & yearID <= 1999 ~ labels[3],
yearID >= 2000 & yearID <= 2004 ~ labels[4],
yearID >= 2005 & yearID <= 2009 ~ labels[5],
yearID >= 2010 & yearID <= 2014 ~ labels[6]))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
## Build requested data frame
df_1 <- df_1 %>%
mutate(period = case_when(yearID >= 1985 & yearID <= 1989 ~ labels[1],
yearID >= 1990 & yearID <= 1994 ~ labels[2],
yearID >= 1995 & yearID <= 1999 ~ labels[3],
yearID >= 2000 & yearID <= 2004 ~ labels[4],
yearID >= 2005 & yearID <= 2009 ~ labels[5],
yearID >= 2010 & yearID <= 2014 ~ labels[6]))
head(df_1)
ggplot() +
geom_boxplot(aes(x=allstar_status, y=salary/1000), color = allstar_status,coef=Inf) +
facet_wrap(~period, nrow=2)
ggplot(df_1) +
geom_boxplot(aes(x=allstar_status, y=salary/1000), color = allstar_status,coef=Inf) +
facet_wrap(~period, nrow=2)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
## Build requested data frame
df_1 <- df_1 %>%
mutate(period = case_when(yearID >= 1985 & yearID <= 1989 ~ labels[1],
yearID >= 1990 & yearID <= 1994 ~ labels[2],
yearID >= 1995 & yearID <= 1999 ~ labels[3],
yearID >= 2000 & yearID <= 2004 ~ labels[4],
yearID >= 2005 & yearID <= 2009 ~ labels[5],
yearID >= 2010 & yearID <= 2014 ~ labels[6]))
head(df_1)
ggplot(df_1) +
geom_boxplot(aes(x=allstar_status, y=salary/1000), color = allstar_status,coef=Inf) +
facet_wrap(~period, nrow=2)
ggplot(df_1) +
geom_boxplot(aes(x=allstar_status, y=salary/1000)) +
facet_wrap(~period, nrow=2)
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
ggplot(df_1, aes(x=allstar_status, y=salary/1000)) +
geom_boxplot(color = allstar_status, coef=Inf) +
facet_wrap(~period, nrow=2)
ggplot(df_1, aes(x=allstar_status, y=salary/1000)) +
geom_boxplot(aes(color = allstar_status, coef=Inf)) +
facet_wrap(~period, nrow=2)
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
