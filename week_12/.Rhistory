knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("C:/stat_240/scripts/viridis.R")
source("C:/stat_240/scripts/ggprob.R")
## Read in the csv file
## Select confirmed planets, rename some variables
planets <- read_csv("C:/stat_240/data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
planets
planets %>%
select(mass, radius) %>%
summarize_all(function(x) sum(!is.na(x)))
planets %>%
select(mass, radius) %>%
drop_na() %>%
nrow()
ggplot(planets, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)")
ggplot(planets, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(se=FALSE) +
geom_smooth(method="lm", se=FALSE, color="magenta")
power_law <- function(theta){
df <- tibble(x = seq(0, 10, by = .1),
y =x^theta)
gg <- ggplot(df, aes(x,y)) +
geom_line() +
ggtitle(paste0("Power law exponent: ", theta))
return(gg)
}
power_law(1)
power_law(.5)
power_law(2)
mr <- planets %>%
filter(between(mass, 2, 127)) %>%
drop_na()
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(se=FALSE) +
geom_smooth(method="lm", se=FALSE, color="magenta")
power_law(0)
power_law(4)
lm1 <- lm(log10(mass) ~ log10(radius), data = mr)
summary(lm1)
lm1
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue")
lm1[2]
lm1[2]
lm1 <- lm(log10(mass) ~ log10(radius), data = mr)
summary(lm1)
mr %>%
mutate(mass_pred = 10^coef(lm1)[1]*radius^coef(lm1)[2]) %>%
ggplot(aes(radius, mass)) +
geom_point() +
geom_line(aes(y = mass_pred), color="red") +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)")
mr %>%
mutate(mass_pred = 10^coef(lm1)[1]*radius^coef(lm1)[2]) %>%
ggplot(aes(radius, mass)) +
geom_point() +
geom_line(aes(y = mass_pred), color="red") +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
geom_smooth(method="lm", se=FALSE, color="blue")
summary(lm(mass ~ radius, data=mr))
mr <- mr %>%
add_residuals(lm1) %>%
add_predictions(lm1)
mr
ggplot(mr, aes(x=radius, y=mass)) +
geom_point() +
geom_segment(aes(xend = radius, yend = 10^pred), color="blue") +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue")
ggplot(mr, aes(x=radius, y=resid)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Residual (Earth Mass)") +
scale_x_log10() +
geom_hline(aes(yintercept = 0), color = "red", linetype = "dashed")
col <- viridis(10,begin=1,end=0)
g <- ggplot()
for ( i in 1:10 )
g <- g + geom_t_density(2^(i-1),color=col[i],a=-5,b=5)
g <- g +
geom_norm_density(color="black") +
geom_hline(yintercept=0) +
theme_bw()
plot(g)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("C:/stat_240/scripts/viridis.R")
source("C:/stat_240/scripts/ggprob.R")
## Read in the csv file
## Select confirmed planets, rename some variables
planets <- read_csv("C:/stat_240/data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
## Number of mass and radius estimates
planets %>%
select(mass, radius) %>%
summarize_all(function(x) sum(!is.na(x)))
## How many observations do we have with both mass and radius estimates?
planets %>%
select(mass, radius) %>%
drop_na() %>%
nrow()
ggplot(planets, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)")
ggplot(planets, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(se=FALSE) +
geom_smooth(method="lm", se=FALSE, color="magenta")
power_law <- function(theta){
df <- tibble(x = seq(0, 10, by = .1),
y =x^theta)
gg <- ggplot(df, aes(x,y)) +
geom_line() +
ggtitle(paste0("Power law exponent: ", theta))
return(gg)
}
power_law(1)
power_law(.5)
power_law(2)
power_law(0)
power_law(4)
mr <- planets %>%
filter(between(mass, 2, 127)) %>%
drop_na()
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(se=FALSE) +
geom_smooth(method="lm", se=FALSE, color="magenta")
lm1 <- lm(log10(mass) ~ log10(radius), data = mr)
summary(lm1)
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue")
#second coef of linear model = slope
#first coef of linear model = intercept
mr %>%
mutate(mass_pred = 10^coef(lm1)[1]*radius^coef(lm1)[2]) %>%
ggplot(aes(radius, mass)) +
geom_point() +
geom_line(aes(y = mass_pred), color="red") +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)")
mr %>%
mutate(mass_pred = 10^coef(lm1)[1]*radius^coef(lm1)[2]) %>%
ggplot(aes(radius, mass)) +
geom_point() +
geom_line(aes(y = mass_pred), color="red") +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
geom_smooth(method="lm", se=FALSE, color="blue")
summary(lm(mass ~ radius, data=mr))
mr <- mr %>%
add_residuals(lm1) %>%
add_predictions(lm1)
ggplot(mr, aes(x=radius, y=mass)) +
geom_point() +
geom_segment(aes(xend = radius, yend = 10^pred), color="blue") +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue")
ggplot(mr, aes(x=radius, y=resid)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Residual (Earth Mass)") +
scale_x_log10() +
geom_hline(aes(yintercept = 0), color = "red", linetype = "dashed")
col <- viridis(10,begin=1,end=0)
g <- ggplot()
for ( i in 1:10 )
g <- g + geom_t_density(2^(i-1),color=col[i],a=-5,b=5)
g <- g +
geom_norm_density(color="black") +
geom_hline(yintercept=0) +
theme_bw()
plot(g)
n <- nrow(mr)
syy <- sum(mr$resid^2)
sxx <- sum((log10(mr$radius) - mean(log10(mr$radius)))^2)
sqrt(syy/(n-2)/sxx)  ## standard error using the formula above
coef(summary(lm1))[2, "Std. Error"] ## standard error from our lm1 model
summary(lm1)
mr %>%
nrow()
pt(20.01, df=311, lower.tail=FALSE)*2
gt(311, a = -21, b = 21) +
geom_vline(aes(xintercept = c(-20.01, 20.01)), color="red", linetype="dashed") +
geom_t_fill(311, a = 20.01) +
geom_t_fill(311, b = -20.01)
n <- mr %>%
select(mass, radius) %>%
drop_na() %>%
nrow()
n
sigma_resid <- sd(mr$resid)
sigma_resid
a_0
a_0 <- numeric(N)
N <- 10000
a_0 <- numeric(N)
a_1 <- numeric(N)
a_0 <- numeric(N)
a_0
n <- mr %>%
select(mass, radius) %>%
drop_na() %>%
nrow()
sigma_resid <- sd(mr$resid)
N <- 10000
a_0 <- numeric(N)
a_1 <- numeric(N)
for ( i in 1:N )
{
mr_new <- mr %>%
drop_na() %>%
mutate(mass = 10^(pred + rnorm(n,0,sigma_resid)))
lm2 <- lm(log10(mass) ~ log10(radius), data=mr_new)
a_0[i] <- coef(lm2)[1]
a_1[i] <- coef(lm2)[2]
}
df_coef <- tibble(a_0,a_1)
mean_slope <- mean(df_coef$a_1)
mean_slope
sd_slope <- sd(df_coef$a_1)
sd_slope
ggplot(df_coef, aes(x=a_1)) +
geom_density() +
xlab("theta") +
ylab("Density") +
geom_norm_density(mu = mean_slope, sigma = sd_slope, color="blue") +
ggtitle("Exoplanet Mass-Radius Relationship",
subtitle = "Parametric bootstrap distribution of the slope (black), and a normal density (blue)")
paste("Bootstrap: ", round(mean_slope,3), round(sd_slope,3))
paste("Theoretical: ", round(coef(lm1)[2],3), round(coef(summary(lm1))[2, "Std. Error"],3))
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue")
predict_y <- function(x){
## x = radius (on original scale)
slope <- coef(lm1)[2]
intercept <- coef(lm1)[1]
logy <- intercept + slope*log10(x)
y <- 10^logy
names(y) <- "predicted mass"
return(y)
}
radius_input <- 3
mass_predicted <- predict_y(3)
mass_predicted
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue") +
geom_point(aes(x = radius_input, y=mass_predicted), color = "red", size = 2)
radius <- 10^mean(log10(mr$radius)) ## mean of log10(radius), transformed back to original scale for function
radius
log10(predict_y(radius)) ## mean from predicted values
radius <- 10^mean(log10(mr$radius)) ## mean of log10(radius), transformed back to original scale for function
radius
log10(predict_y(radius)) ## mean from predicted values
mean(log10(mr$mass))  ## mean of log10(mass)
s_yhat <- function(x){
## x = radius on original scale
n <- nrow(mr)
syy <- sum(mr$resid^2)/(n-2)
mean_logx <-mean(log10(mr$radius))
sxx <- sum((log10(mr$radius) - mean_logx)^2)
out <- sqrt(syy*(1/n + (log10(x)-mean_logx)^2/sxx))
return(out)
}
s_yhat(3)
mr <- mr %>%
mutate(y_plus_se = pred + qt(.975, n-2)*s_yhat(radius),
y_minus_se = pred - qt(.975, n-2)*s_yhat(radius))
mr
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method="lm", se=TRUE, color="red")+
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method="lm", se=TRUE, color="red")
mr <- mr %>%
mutate(y_plus_se = pred + qt(.975, n-2)*s_yhat(radius),
y_minus_se = pred - qt(.975, n-2)*s_yhat(radius))
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method="lm", se=TRUE, color="red")+
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue") +
geom_line(aes(x = radius, y= 10^y_plus_se), color = "red", linetype="dashed") +
geom_line(aes(x = radius, y= 10^y_minus_se), color = "red", linetype="dashed") +
geom_vline(aes(xintercept = 10^(mean(log10(radius)))), color="blue", linetype="dotted")
mr <- mr %>%
mutate(y_plus_se = pred + qt(.975, n-2)*s_yhat(radius),
y_minus_se = pred - qt(.975, n-2)*s_yhat(radius))
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
#geom_smooth(method="lm", se=TRUE, color="red")+
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue") +
geom_line(aes(x = radius, y= 10^y_plus_se), color = "red", linetype="dashed") +
geom_line(aes(x = radius, y= 10^y_minus_se), color = "red", linetype="dashed") +
geom_vline(aes(xintercept = 10^(mean(log10(radius)))), color="blue", linetype="dotted")
mr <- mr %>%
mutate(y_plus_se = pred + qt(.975, n-2)*s_yhat(radius),
y_minus_se = pred - qt(.975, n-2)*s_yhat(radius))
ggplot(mr, aes(radius, mass)) +
geom_point() +
xlab("Radius (Earth Radius)") +
ylab("Mass (Earth Mass)") +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method="lm", se=TRUE, color="red")+
geom_abline(aes(slope = coef(lm1)[2] , intercept = coef(lm1)[1]), color="blue") +
geom_line(aes(x = radius, y= 10^y_plus_se), color = "red", linetype="dashed") +
geom_line(aes(x = radius, y= 10^y_minus_se), color = "red", linetype="dashed") +
geom_vline(aes(xintercept = 10^(mean(log10(radius)))), color="blue", linetype="dotted")
